import { OPENAI_API } from "./api/api.js";
import Spinner from './assets/loading.gif';

const form = document.querySelector('form');
const buttonText = document.querySelector('button span');
const loadingOverlay = document.querySelector('#loading-overlay');

const generateImage = async (prompt) => {
    try {
        showloading(true);
        const response = await OPENAI_API.createImage({
            prompt: prompt,
            n: 1,
            size: '512x512'
        });

        const imageURL = response.data.data[0].url;

        loadingOverlay.firstElementChild.src = imageURL;
        loadingOverlay.firstElementChild.alt = 'Image generated by AI'

        await delay(5000);

        showloading(false);

    } catch (error) {
        console.warn(error)
    }
}

form.addEventListener('submit', (event) => {
    event.preventDefault();

    const formData = new FormData(form);
    formData.forEach(async entry => {
        if (!entry || Array.from(entry) < 3) return;
         await generateImage(entry);
         form.reset();
    })

})

const showloading = (state = false) => {

    const config = {
        loadingText: '...',
        default: 'Generate image'
    };

    if (!state) {
        buttonText.innerText = config.default;
        loadingOverlay.classList.add('hidden');

        loadingOverlay.firstElementChild.src = Spinner;
        loadingOverlay.firstElementChild.alt = 'Loading animation'
    }
    else {
        buttonText.innerText = config.loadingText;
        loadingOverlay.classList.remove('hidden');
    }
}

const delay = (milliseconds) => new Promise(resolve => setTimeout(resolve, milliseconds));